{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","service/images-api.js","service/scroll-to-el.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","query","onQueryInputChange","event","value","target","setState","onQueryFormSubmit","preventDefault","trim","length","props","onSubmit","toLowerCase","this","className","styles","searchbar","form","type","button","disabled","label","input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","onModalClick","source","alt","largeImageSrc","item","onClick","src","image","Button","isImageLoading","handleLoading","container","color","height","width","timeout","Modal","handleEscapeKeydown","code","onModalClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","descr","overlay","modal","getNewImages","url","fetch","then","response","ok","json","Promise","reject","Error","scrollToElement","scrollTo","top","document","documentElement","scrollHeight","behavior","key","ImageGallery","images","page","error","loading","isModalShown","largeImageData","onLoadMoreButtonClick","keyword","hits","catch","finally","toggleModalState","getLargeImageData","dataset","prevProps","prevState","loader","gallery","map","index","webformatURL","largeImageURL","tags","App","handleQueryFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cbd09391.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"ImageGallery_loader__4tsAz\",\"gallery\":\"ImageGallery_gallery__w6oSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__2Me1V\",\"image\":\"ImageGalleryItem_image__5_D0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__qIv0h\",\"button\":\"Button_button__3niCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2eOqq\",\"modal\":\"Modal_modal__2AzXi\"};","import { Component } from \"react\";\r\nimport styles from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    onQueryInputChange = event => {\r\n        const { value } = event.target;\r\n\r\n        this.setState({ query: value });\r\n    }\r\n\r\n    onQueryFormSubmit = event => {\r\n        event.preventDefault();\r\n        const { query } = this.state;\r\n\r\n        if (query.trim().length < 1) {\r\n            return;\r\n        }\r\n        this.props.onSubmit(query.toLowerCase().trim());\r\n    }\r\n\r\n    render() {\r\n        const { query } = this.state;\r\n\r\n        return (\r\n            <header className={styles.searchbar}>\r\n                <form className={styles.form} onSubmit={this.onQueryFormSubmit}>\r\n                    <button type=\"submit\" className={styles.button} disabled={!query.trim().length > 0}>\r\n                        <span className={styles.label}>Search</span>\r\n                    </button>\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        value={query}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.onQueryInputChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nclass ImageGalleryItem extends Component {\r\n    \r\n    static propTypes = {\r\n        id: PropTypes.number,\r\n        onModalClick: PropTypes.func,\r\n        source: PropTypes.string,\r\n        alt: PropTypes.string,\r\n        largeImageSrc: PropTypes.string\r\n    }\r\n\r\n    render() {\r\n        const { id, onModalClick, source, alt, largeImageSrc } = this.props;\r\n        return (\r\n            <li className={styles.item} key={id} onClick={onModalClick}>\r\n                <img src={source} alt={alt} data-source={largeImageSrc} className={styles.image} />\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageGalleryItem;","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport styles from './Button.module.css';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        const { isImageLoading, handleLoading } = this.props;\r\n        return (\r\n            <div className={styles.container}>\r\n                {\r\n                    isImageLoading\r\n                        ?\r\n                        <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={3000} \r\n                        />\r\n                        :\r\n                        <button type=\"button\" className={styles.button} onClick={handleLoading}>\r\n                            Load more\r\n                        </button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\n\r\nclass Modal extends Component {\r\n\r\n    static propTypes = {\r\n        source: PropTypes.string,\r\n        descr: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleEscapeKeydown);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleEscapeKeydown);\r\n    }\r\n\r\n    handleEscapeKeydown = event => {\r\n        if (event.code === 'Escape') {\r\n            this.props.onModalClose();\r\n        }\r\n    }\r\n    handleBackdropClick = event => {\r\n        if (event.target === event.currentTarget) {\r\n            this.props.onModalClose();\r\n        }\r\n    }\r\n    render() {\r\n        const { source, descr } = this.props;\r\n        return (\r\n            <div className={styles.overlay} onClick={this.handleBackdropClick}>\r\n                <div className={styles.modal}>\r\n                    <img src={source} alt={descr} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","function getNewImages(url) {\r\n    return fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n                    return Promise.reject(new Error('Something went wrong. Try later'));\r\n                })\r\n}\r\n\r\nexport default getNewImages;","function scrollToElement() {\r\n    return window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n}\r\nexport default scrollToElement;","import { Component, Fragment } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Loader from \"react-loader-spinner\";\r\nimport styles from './ImageGallery.module.css'\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport Button from \"../Button\";\r\nimport Modal from \"../Modal\";\r\nimport getNewImages from \"../../service/images-api\";\r\nimport scrollToElement from \"../../service/scroll-to-el\";\r\n\r\nconst key = '23015734-ca5f063b9797e09c36ee88a0d';\r\n\r\nclass ImageGallery extends Component {\r\n    \r\n    static propTypes = {\r\n        keyword: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        images: [],\r\n        page: null,\r\n        error: null,\r\n        loading: false,\r\n        isModalShown: false,\r\n        largeImageData: {}\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.keyword !== this.props.keyword) {\r\n            this.setState({\r\n                images: [],\r\n                page: 1,\r\n                loading: true\r\n            }, () => {\r\n                const { keyword } = this.props;\r\n                const { page } = this.state;\r\n                const url = `https://pixabay.com/api/?q=${keyword}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n                getNewImages(url)\r\n                    .then(({ hits }) => this.setState({ images: hits }))\r\n                    .catch(error => this.setState({error}))\r\n                    .finally(() => this.setState({loading: false}))\r\n            });\r\n        }\r\n    }\r\n    \r\n    onLoadMoreButtonClick = () => {\r\n        this.setState(({page}) => {\r\n            return {\r\n                page: page + 1,\r\n                loading: true\r\n            }\r\n        }, () => {\r\n            const { keyword } = this.props;\r\n            const { page } = this.state;\r\n            const url = `https://pixabay.com/api/?q=${keyword}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n            \r\n            getNewImages(url)\r\n                .then(({ hits }) => this.setState(({ images }) => {\r\n                    return {images: [...images, ...hits]}\r\n                }))\r\n                .then(() => {scrollToElement()})\r\n                .catch(error => this.setState({ error }))\r\n                .finally(() => {this.setState({loading: false})})\r\n        })\r\n    }\r\n\r\n    toggleModalState = event => {\r\n        this.setState(({ isModalShown }) => {\r\n            return {isModalShown: !isModalShown};\r\n        }, () => {\r\n            if (this.state.isModalShown) {\r\n                this.getLargeImageData(event.target);\r\n            }\r\n        })\r\n    }\r\n\r\n    getLargeImageData = image => {\r\n            this.setState({\r\n            largeImageData: {\r\n                source: image.dataset.source,\r\n                alt: image.alt\r\n        }})        \r\n    }\r\n\r\n    render() {\r\n        const { loading, images, isModalShown, largeImageData, } = this.state;\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                {loading && (\r\n                    <div className={styles.loader}>\r\n                    <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                        timeout={3000}\r\n                    />\r\n                    </div>)}\r\n                {images.length > 0 && (\r\n                    <Fragment>\r\n                        <ul className={styles.gallery}>{\r\n                            images.map(({ id, webformatURL, largeImageURL, tags }, index) => {\r\n                                return (\r\n                                    <ImageGalleryItem\r\n                                        onModalClick={this.toggleModalState}\r\n                                        key={index}\r\n                                        id={id}\r\n                                        source={webformatURL}\r\n                                        alt={tags}\r\n                                        largeImageSrc={largeImageURL}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                        </ul>\r\n                        <Button\r\n                            handleLoading={this.onLoadMoreButtonClick}\r\n                            isImageLoading={loading}\r\n                        />\r\n                        {\r\n                            isModalShown && (\r\n                                <Modal\r\n                                    source={largeImageData.source}\r\n                                    descr={largeImageData.alt}\r\n                                    onModalClose={this.toggleModalState}\r\n                                />\r\n                            )}\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageGallery;","import { Component } from \"react\";\nimport './App.css'\n\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\n\nclass App extends Component {\n  \n  state = {\n    query: '',\n  }\n\n  handleQueryFormSubmit = value => {\n    this.setState({query: value});\n  }\n\n\n  render() {\n    return (\n      <div className=\"AppContainer\">\n        <Searchbar\n          onSubmit={this.handleQueryFormSubmit}\n        />\n        <ImageGallery\n          keyword={this.state.query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2cjDv\",\"form\":\"Searchbar_form__MgPRJ\",\"button\":\"Searchbar_button__36jzd\",\"label\":\"Searchbar_label__2gQYP\",\"input\":\"Searchbar_input__3mw-x\"};"],"sourceRoot":""}